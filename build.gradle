plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco' version '0.8.11'
}

allprojects {
    group = 'com.datapublic'
    version = '0.0.1-SNAPSHOT'
    description = 'Spring Boot MCP Integration with Redis + JPA Cache Pattern'
    
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    dependencies {
        // Spring Boot Starters
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        
        // Database
        runtimeOnly 'com.h2database:h2'                    // 개발용
        runtimeOnly 'org.postgresql:postgresql'            // 운영용
        
        // JSON 처리
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
        
        // 로깅
        implementation 'org.slf4j:slf4j-api'
        implementation 'ch.qos.logback:logback-classic'
        
        // 테스트
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:testcontainers'
        testImplementation 'org.testcontainers:postgresql'
        
        // 개발 도구
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }
    
    tasks.named('test') {
        useJUnitPlatform()
    }
    
    // JaCoCo 설정
    jacocoTestReport {
        reports {
            xml.required = true
            html.required = true
        }
    }
    
    // SonarQube 설정
    sonarqube {
        properties {
            property 'sonar.projectKey', 'spring-boot-mcp-integration'
            property 'sonar.projectName', 'Spring Boot MCP Integration'
            property 'sonar.host.url', 'http://localhost:9000'
        }
    }
}

// 루트 프로젝트 설정
bootJar {
    enabled = false
}

jar {
    enabled = true
}

// 전체 프로젝트 테스트 실행
task testAll {
    dependsOn subprojects.test
}

// 전체 프로젝트 빌드
task buildAll {
    dependsOn subprojects.build
}

// 전체 프로젝트 정리
task cleanAll {
    dependsOn subprojects.clean
}
